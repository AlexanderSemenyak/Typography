//Apache2, 2014-2016, Samuel Carlsson, WinterDev

using System;
namespace NRasterizer
{


    public class Glyph
    {
        readonly short[] _xs;
        readonly short[] _ys;
        readonly ushort[] _contourEndPoints;
        readonly Bounds _bounds;
        readonly bool[] _onCurves;
        public static readonly Glyph Empty = new Glyph(new short[0], new short[0], new bool[0], new ushort[0], Bounds.Zero);

        public Glyph(short[] xs, short[] ys, bool[] onCurves, ushort[] contourEndPoints, Bounds bounds)
        {
            _xs = xs;
            _ys = ys;
            _onCurves = onCurves;
            _contourEndPoints = contourEndPoints;
            _bounds = bounds;
        }
        internal short[] Xs { get { return _xs; } }
        internal short[] Ys { get { return _ys; } }
        public Bounds Bounds { get { return _bounds; } }
        public ushort[] EndPoints { get { return _contourEndPoints; } }
        public bool[] OnCurves { get { return _onCurves; } }
        //--------------


        internal GlyphClassKind GlyphClassDef { get; set; }
#if DEBUG
        public override string ToString()
        {
            return GlyphClassDef.ToString();
        }
#endif

    }

    //https://www.microsoft.com/typography/otspec/gdef.htm
    enum GlyphClassKind
    {
        //1 	Base glyph (single character, spacing glyph)
        //2 	Ligature glyph (multiple character, spacing glyph)
        //3 	Mark glyph (non-spacing combining glyph)
        //4 	Component glyph (part of single character, spacing glyph)
        //
        // The font developer does not have to classify every glyph in the font, 
        //but any glyph not assigned a class value falls into Class zero (0). 
        //For instance, class values might be useful for the Arabic glyphs in a font, but not for the Latin glyphs. 
        //Then the GlyphClassDef table will list only Arabic glyphs, and-by default-the Latin glyphs will be assigned to Class 0. 
        //Component glyphs can be put together to generate ligatures. 
        //A ligature can be generated by creating a glyph in the font that references the component glyphs, 
        //or outputting the component glyphs in the desired sequence. 
        //Component glyphs are not used in defining any GSUB or GPOS formats.
        //
        Zero = 0,//class0, classZero
        Base,
        Ligature,
        Mark,
        Component
    }
}
