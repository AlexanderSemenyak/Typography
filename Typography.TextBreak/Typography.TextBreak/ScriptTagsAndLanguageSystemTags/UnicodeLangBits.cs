//MIT, 2016-present, WinterDev

using System.Collections.Generic;
using System.ComponentModel;

namespace Typography.OpenFont
{

    //https://docs.microsoft.com/en-us/typography/opentype/spec/os2#ulunicoderange1-bits-031ulunicoderange2-bits-3263ulunicoderange3-bits-6495ulunicoderange4-bits-96127     

    public class UnicodeLangRange
    {
        public int StarAt { get; }
        public int EndAt { get; }
        public string Name { get; }
        internal UnicodeLangRange(int startAt, int endAt, string name)
        {
            StarAt = startAt;
            EndAt = endAt;
            Name = name;
        }
        public bool IsInRange(int codepoint) => codepoint >= StarAt && codepoint <= EndAt;
        public override string ToString() => Name;
    }

    public readonly struct BitposAndAssciatedUnicodeRanges
    {
        public readonly int Bitpos;
        public readonly UnicodeLangRange[] Ranges;
        public BitposAndAssciatedUnicodeRanges(int bitpos, UnicodeLangRange[] ranges)
        {
            Bitpos = bitpos;
            Ranges = ranges;
        }
        public override string ToString()
        {
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            sb.Append(Bitpos + ",");
            for (int i = 0; i < Ranges.Length; ++i)
            {
                sb.Append(Ranges[i].ToString());
            }
            return sb.ToString();
        }
        public bool IsInRange(int codepoint)
        {
            for (int i = 0; i < Ranges.Length; ++i)
            {
                if (Ranges[i].IsInRange(codepoint))
                {
                    return true;
                }
            }
            return false;
        }
    }


    public static class UnicodeLangRanges
    {

        static UnicodeLangRange _(int startAt, int endAt, string name) => new UnicodeLangRange(startAt, endAt, name);

        //AUTOGEN
        public static readonly UnicodeLangRange
        Basic_Latin = _(0x0000, 0x007F, nameof(Basic_Latin)),
Latin_1_Supplement = _(0x0080, 0x00FF, nameof(Latin_1_Supplement)),
Latin_Extended_A = _(0x0100, 0x017F, nameof(Latin_Extended_A)),
Latin_Extended_B = _(0x0180, 0x024F, nameof(Latin_Extended_B)),
IPA_Extensions = _(0x0250, 0x02AF, nameof(IPA_Extensions)),
Phonetic_Extensions = _(0x1D00, 0x1D7F, nameof(Phonetic_Extensions)),
Phonetic_Extensions_Supplement = _(0x1D80, 0x1DBF, nameof(Phonetic_Extensions_Supplement)),
Spacing_Modifier_Letters = _(0x02B0, 0x02FF, nameof(Spacing_Modifier_Letters)),
Modifier_Tone_Letters = _(0xA700, 0xA71F, nameof(Modifier_Tone_Letters)),
Combining_Diacritical_Marks = _(0x0300, 0x036F, nameof(Combining_Diacritical_Marks)),
Combining_Diacritical_Marks_Supplement = _(0x1DC0, 0x1DFF, nameof(Combining_Diacritical_Marks_Supplement)),
Greek_and_Coptic = _(0x0370, 0x03FF, nameof(Greek_and_Coptic)),
Coptic = _(0x2C80, 0x2CFF, nameof(Coptic)),
Cyrillic = _(0x0400, 0x04FF, nameof(Cyrillic)),
Cyrillic_Supplement = _(0x0500, 0x052F, nameof(Cyrillic_Supplement)),
Cyrillic_Extended_A = _(0x2DE0, 0x2DFF, nameof(Cyrillic_Extended_A)),
Cyrillic_Extended_B = _(0xA640, 0xA69F, nameof(Cyrillic_Extended_B)),
Armenian = _(0x0530, 0x058F, nameof(Armenian)),
Hebrew = _(0x0590, 0x05FF, nameof(Hebrew)),
Vai = _(0xA500, 0xA63F, nameof(Vai)),
Arabic = _(0x0600, 0x06FF, nameof(Arabic)),
Arabic_Supplement = _(0x0750, 0x077F, nameof(Arabic_Supplement)),
NKo = _(0x07C0, 0x07FF, nameof(NKo)),
Devanagari = _(0x0900, 0x097F, nameof(Devanagari)),
Bengali = _(0x0980, 0x09FF, nameof(Bengali)),
Gurmukhi = _(0x0A00, 0x0A7F, nameof(Gurmukhi)),
Gujarati = _(0x0A80, 0x0AFF, nameof(Gujarati)),
Oriya = _(0x0B00, 0x0B7F, nameof(Oriya)),
Tamil = _(0x0B80, 0x0BFF, nameof(Tamil)),
Telugu = _(0x0C00, 0x0C7F, nameof(Telugu)),
Kannada = _(0x0C80, 0x0CFF, nameof(Kannada)),
Malayalam = _(0x0D00, 0x0D7F, nameof(Malayalam)),
Thai = _(0x0E00, 0x0E7F, nameof(Thai)),
Lao = _(0x0E80, 0x0EFF, nameof(Lao)),
Georgian = _(0x10A0, 0x10FF, nameof(Georgian)),
Georgian_Supplement = _(0x2D00, 0x2D2F, nameof(Georgian_Supplement)),
Balinese = _(0x1B00, 0x1B7F, nameof(Balinese)),
Hangul_Jamo = _(0x1100, 0x11FF, nameof(Hangul_Jamo)),
Latin_Extended_Additional = _(0x1E00, 0x1EFF, nameof(Latin_Extended_Additional)),
Latin_Extended_C = _(0x2C60, 0x2C7F, nameof(Latin_Extended_C)),
Latin_Extended_D = _(0xA720, 0xA7FF, nameof(Latin_Extended_D)),
Greek_Extended = _(0x1F00, 0x1FFF, nameof(Greek_Extended)),
General_Punctuation = _(0x2000, 0x206F, nameof(General_Punctuation)),
Supplemental_Punctuation = _(0x2E00, 0x2E7F, nameof(Supplemental_Punctuation)),
Superscripts_And_Subscripts = _(0x2070, 0x209F, nameof(Superscripts_And_Subscripts)),
Currency_Symbols = _(0x20A0, 0x20CF, nameof(Currency_Symbols)),
Combining_Diacritical_Marks_For_Symbols = _(0x20D0, 0x20FF, nameof(Combining_Diacritical_Marks_For_Symbols)),
Letterlike_Symbols = _(0x2100, 0x214F, nameof(Letterlike_Symbols)),
Number_Forms = _(0x2150, 0x218F, nameof(Number_Forms)),
Arrows = _(0x2190, 0x21FF, nameof(Arrows)),
Supplemental_Arrows_A = _(0x27F0, 0x27FF, nameof(Supplemental_Arrows_A)),
Supplemental_Arrows_B = _(0x2900, 0x297F, nameof(Supplemental_Arrows_B)),
Miscellaneous_Symbols_and_Arrows = _(0x2B00, 0x2BFF, nameof(Miscellaneous_Symbols_and_Arrows)),
Mathematical_Operators = _(0x2200, 0x22FF, nameof(Mathematical_Operators)),
Supplemental_Mathematical_Operators = _(0x2A00, 0x2AFF, nameof(Supplemental_Mathematical_Operators)),
Miscellaneous_Mathematical_Symbols_A = _(0x27C0, 0x27EF, nameof(Miscellaneous_Mathematical_Symbols_A)),
Miscellaneous_Mathematical_Symbols_B = _(0x2980, 0x29FF, nameof(Miscellaneous_Mathematical_Symbols_B)),
Miscellaneous_Technical = _(0x2300, 0x23FF, nameof(Miscellaneous_Technical)),
Control_Pictures = _(0x2400, 0x243F, nameof(Control_Pictures)),
Optical_Character_Recognition = _(0x2440, 0x245F, nameof(Optical_Character_Recognition)),
Enclosed_Alphanumerics = _(0x2460, 0x24FF, nameof(Enclosed_Alphanumerics)),
Box_Drawing = _(0x2500, 0x257F, nameof(Box_Drawing)),
Block_Elements = _(0x2580, 0x259F, nameof(Block_Elements)),
Geometric_Shapes = _(0x25A0, 0x25FF, nameof(Geometric_Shapes)),
Miscellaneous_Symbols = _(0x2600, 0x26FF, nameof(Miscellaneous_Symbols)),
Dingbats = _(0x2700, 0x27BF, nameof(Dingbats)),
CJK_Symbols_And_Punctuation = _(0x3000, 0x303F, nameof(CJK_Symbols_And_Punctuation)),
Hiragana = _(0x3040, 0x309F, nameof(Hiragana)),
Katakana = _(0x30A0, 0x30FF, nameof(Katakana)),
Katakana_Phonetic_Extensions = _(0x31F0, 0x31FF, nameof(Katakana_Phonetic_Extensions)),
Bopomofo = _(0x3100, 0x312F, nameof(Bopomofo)),
Bopomofo_Extended = _(0x31A0, 0x31BF, nameof(Bopomofo_Extended)),
Hangul_Compatibility_Jamo = _(0x3130, 0x318F, nameof(Hangul_Compatibility_Jamo)),
Phags_pa = _(0xA840, 0xA87F, nameof(Phags_pa)),
Enclosed_CJK_Letters_And_Months = _(0x3200, 0x32FF, nameof(Enclosed_CJK_Letters_And_Months)),
CJK_Compatibility = _(0x3300, 0x33FF, nameof(CJK_Compatibility)),
Hangul_Syllables = _(0xAC00, 0xD7AF, nameof(Hangul_Syllables)),
Non_Plane_0 = _(0x10000, 0x10FFFF, nameof(Non_Plane_0)),
Phoenician = _(0x10900, 0x1091F, nameof(Phoenician)),
CJK_Unified_Ideographs = _(0x4E00, 0x9FFF, nameof(CJK_Unified_Ideographs)),
CJK_Radicals_Supplement = _(0x2E80, 0x2EFF, nameof(CJK_Radicals_Supplement)),
Kangxi_Radicals = _(0x2F00, 0x2FDF, nameof(Kangxi_Radicals)),
Ideographic_Description_Characters = _(0x2FF0, 0x2FFF, nameof(Ideographic_Description_Characters)),
CJK_Unified_Ideographs_Extension_A = _(0x3400, 0x4DBF, nameof(CJK_Unified_Ideographs_Extension_A)),
CJK_Unified_Ideographs_Extension_B = _(0x20000, 0x2A6DF, nameof(CJK_Unified_Ideographs_Extension_B)),
Kanbun = _(0x3190, 0x319F, nameof(Kanbun)),
Private_Use_Area__plane_0_ = _(0xE000, 0xF8FF, nameof(Private_Use_Area__plane_0_)),
CJK_Strokes = _(0x31C0, 0x31EF, nameof(CJK_Strokes)),
CJK_Compatibility_Ideographs = _(0xF900, 0xFAFF, nameof(CJK_Compatibility_Ideographs)),
CJK_Compatibility_Ideographs_Supplement = _(0x2F800, 0x2FA1F, nameof(CJK_Compatibility_Ideographs_Supplement)),
Alphabetic_Presentation_Forms = _(0xFB00, 0xFB4F, nameof(Alphabetic_Presentation_Forms)),
Arabic_Presentation_Forms_A = _(0xFB50, 0xFDFF, nameof(Arabic_Presentation_Forms_A)),
Combining_Half_Marks = _(0xFE20, 0xFE2F, nameof(Combining_Half_Marks)),
Vertical_Forms = _(0xFE10, 0xFE1F, nameof(Vertical_Forms)),
CJK_Compatibility_Forms = _(0xFE30, 0xFE4F, nameof(CJK_Compatibility_Forms)),
Small_Form_Variants = _(0xFE50, 0xFE6F, nameof(Small_Form_Variants)),
Arabic_Presentation_Forms_B = _(0xFE70, 0xFEFF, nameof(Arabic_Presentation_Forms_B)),
Halfwidth_And_Fullwidth_Forms = _(0xFF00, 0xFFEF, nameof(Halfwidth_And_Fullwidth_Forms)),
Specials = _(0xFFF0, 0xFFFF, nameof(Specials)),
Tibetan = _(0x0F00, 0x0FFF, nameof(Tibetan)),
Syriac = _(0x0700, 0x074F, nameof(Syriac)),
Thaana = _(0x0780, 0x07BF, nameof(Thaana)),
Sinhala = _(0x0D80, 0x0DFF, nameof(Sinhala)),
Myanmar = _(0x1000, 0x109F, nameof(Myanmar)),
Ethiopic = _(0x1200, 0x137F, nameof(Ethiopic)),
Ethiopic_Supplement = _(0x1380, 0x139F, nameof(Ethiopic_Supplement)),
Ethiopic_Extended = _(0x2D80, 0x2DDF, nameof(Ethiopic_Extended)),
Cherokee = _(0x13A0, 0x13FF, nameof(Cherokee)),
Unified_Canadian_Aboriginal_Syllabics = _(0x1400, 0x167F, nameof(Unified_Canadian_Aboriginal_Syllabics)),
Ogham = _(0x1680, 0x169F, nameof(Ogham)),
Runic = _(0x16A0, 0x16FF, nameof(Runic)),
Khmer = _(0x1780, 0x17FF, nameof(Khmer)),
Khmer_Symbols = _(0x19E0, 0x19FF, nameof(Khmer_Symbols)),
Mongolian = _(0x1800, 0x18AF, nameof(Mongolian)),
Braille_Patterns = _(0x2800, 0x28FF, nameof(Braille_Patterns)),
Yi_Syllables = _(0xA000, 0xA48F, nameof(Yi_Syllables)),
Yi_Radicals = _(0xA490, 0xA4CF, nameof(Yi_Radicals)),
Tagalog = _(0x1700, 0x171F, nameof(Tagalog)),
Hanunoo = _(0x1720, 0x173F, nameof(Hanunoo)),
Buhid = _(0x1740, 0x175F, nameof(Buhid)),
Tagbanwa = _(0x1760, 0x177F, nameof(Tagbanwa)),
Old_Italic = _(0x10300, 0x1032F, nameof(Old_Italic)),
Gothic = _(0x10330, 0x1034F, nameof(Gothic)),
Deseret = _(0x10400, 0x1044F, nameof(Deseret)),
Byzantine_Musical_Symbols = _(0x1D000, 0x1D0FF, nameof(Byzantine_Musical_Symbols)),
Musical_Symbols = _(0x1D100, 0x1D1FF, nameof(Musical_Symbols)),
Ancient_Greek_Musical_Notation = _(0x1D200, 0x1D24F, nameof(Ancient_Greek_Musical_Notation)),
Mathematical_Alphanumeric_Symbols = _(0x1D400, 0x1D7FF, nameof(Mathematical_Alphanumeric_Symbols)),
Private_Use__plane_15_ = _(0xF0000, 0xFFFFD, nameof(Private_Use__plane_15_)),
Private_Use__plane_16_ = _(0x100000, 0x10FFFD, nameof(Private_Use__plane_16_)),
Variation_Selectors = _(0xFE00, 0xFE0F, nameof(Variation_Selectors)),
Variation_Selectors_Supplement = _(0xE0100, 0xE01EF, nameof(Variation_Selectors_Supplement)),
Tags = _(0xE0000, 0xE007F, nameof(Tags)),
Limbu = _(0x1900, 0x194F, nameof(Limbu)),
Tai_Le = _(0x1950, 0x197F, nameof(Tai_Le)),
New_Tai_Lue = _(0x1980, 0x19DF, nameof(New_Tai_Lue)),
Buginese = _(0x1A00, 0x1A1F, nameof(Buginese)),
Glagolitic = _(0x2C00, 0x2C5F, nameof(Glagolitic)),
Tifinagh = _(0x2D30, 0x2D7F, nameof(Tifinagh)),
Yijing_Hexagram_Symbols = _(0x4DC0, 0x4DFF, nameof(Yijing_Hexagram_Symbols)),
Syloti_Nagri = _(0xA800, 0xA82F, nameof(Syloti_Nagri)),
Linear_B_Syllabary = _(0x10000, 0x1007F, nameof(Linear_B_Syllabary)),
Linear_B_Ideograms = _(0x10080, 0x100FF, nameof(Linear_B_Ideograms)),
Aegean_Numbers = _(0x10100, 0x1013F, nameof(Aegean_Numbers)),
Ancient_Greek_Numbers = _(0x10140, 0x1018F, nameof(Ancient_Greek_Numbers)),
Ugaritic = _(0x10380, 0x1039F, nameof(Ugaritic)),
Old_Persian = _(0x103A0, 0x103DF, nameof(Old_Persian)),
Shavian = _(0x10450, 0x1047F, nameof(Shavian)),
Osmanya = _(0x10480, 0x104AF, nameof(Osmanya)),
Cypriot_Syllabary = _(0x10800, 0x1083F, nameof(Cypriot_Syllabary)),
Kharoshthi = _(0x10A00, 0x10A5F, nameof(Kharoshthi)),
Tai_Xuan_Jing_Symbols = _(0x1D300, 0x1D35F, nameof(Tai_Xuan_Jing_Symbols)),
Cuneiform = _(0x12000, 0x123FF, nameof(Cuneiform)),
Cuneiform_Numbers_and_Punctuation = _(0x12400, 0x1247F, nameof(Cuneiform_Numbers_and_Punctuation)),
Counting_Rod_Numerals = _(0x1D360, 0x1D37F, nameof(Counting_Rod_Numerals)),
Sundanese = _(0x1B80, 0x1BBF, nameof(Sundanese)),
Lepcha = _(0x1C00, 0x1C4F, nameof(Lepcha)),
Ol_Chiki = _(0x1C50, 0x1C7F, nameof(Ol_Chiki)),
Saurashtra = _(0xA880, 0xA8DF, nameof(Saurashtra)),
Kayah_Li = _(0xA900, 0xA92F, nameof(Kayah_Li)),
Rejang = _(0xA930, 0xA95F, nameof(Rejang)),
Cham = _(0xAA00, 0xAA5F, nameof(Cham)),
Ancient_Symbols = _(0x10190, 0x101CF, nameof(Ancient_Symbols)),
Phaistos_Disc = _(0x101D0, 0x101FF, nameof(Phaistos_Disc)),
Carian = _(0x102A0, 0x102DF, nameof(Carian)),
Lycian = _(0x10280, 0x1029F, nameof(Lycian)),
Lydian = _(0x10920, 0x1093F, nameof(Lydian)),
Domino_Tiles = _(0x1F030, 0x1F09F, nameof(Domino_Tiles)),
Mahjong_Tiles = _(0x1F000, 0x1F02F, nameof(Mahjong_Tiles)),
Reserved123 = _(0x0, 0x0, nameof(Reserved123)),
Reserved124 = _(0x0, 0x0, nameof(Reserved124)),
Reserved125 = _(0x0, 0x0, nameof(Reserved125)),
Reserved126 = _(0x0, 0x0, nameof(Reserved126)),
Reserved127 = _(0x0, 0x0, nameof(Reserved127));


        //---------
        //AUTOGEN
        static readonly UnicodeLangRange[] s_langRangs = new UnicodeLangRange[]
        {
                Basic_Latin,
Latin_1_Supplement,
Latin_Extended_A,
Latin_Extended_B,
IPA_Extensions,
Phonetic_Extensions,
Phonetic_Extensions_Supplement,
Spacing_Modifier_Letters,
Modifier_Tone_Letters,
Combining_Diacritical_Marks,
Combining_Diacritical_Marks_Supplement,
Greek_and_Coptic,
Coptic,
Cyrillic,
Cyrillic_Supplement,
Cyrillic_Extended_A,
Cyrillic_Extended_B,
Armenian,
Hebrew,
Vai,
Arabic,
Arabic_Supplement,
NKo,
Devanagari,
Bengali,
Gurmukhi,
Gujarati,
Oriya,
Tamil,
Telugu,
Kannada,
Malayalam,
Thai,
Lao,
Georgian,
Georgian_Supplement,
Balinese,
Hangul_Jamo,
Latin_Extended_Additional,
Latin_Extended_C,
Latin_Extended_D,
Greek_Extended,
General_Punctuation,
Supplemental_Punctuation,
Superscripts_And_Subscripts,
Currency_Symbols,
Combining_Diacritical_Marks_For_Symbols,
Letterlike_Symbols,
Number_Forms,
Arrows,
Supplemental_Arrows_A,
Supplemental_Arrows_B,
Miscellaneous_Symbols_and_Arrows,
Mathematical_Operators,
Supplemental_Mathematical_Operators,
Miscellaneous_Mathematical_Symbols_A,
Miscellaneous_Mathematical_Symbols_B,
Miscellaneous_Technical,
Control_Pictures,
Optical_Character_Recognition,
Enclosed_Alphanumerics,
Box_Drawing,
Block_Elements,
Geometric_Shapes,
Miscellaneous_Symbols,
Dingbats,
CJK_Symbols_And_Punctuation,
Hiragana,
Katakana,
Katakana_Phonetic_Extensions,
Bopomofo,
Bopomofo_Extended,
Hangul_Compatibility_Jamo,
Phags_pa,
Enclosed_CJK_Letters_And_Months,
CJK_Compatibility,
Hangul_Syllables,
Non_Plane_0,
Phoenician,
CJK_Unified_Ideographs,
CJK_Radicals_Supplement,
Kangxi_Radicals,
Ideographic_Description_Characters,
CJK_Unified_Ideographs_Extension_A,
CJK_Unified_Ideographs_Extension_B,
Kanbun,
Private_Use_Area__plane_0_,
CJK_Strokes,
CJK_Compatibility_Ideographs,
CJK_Compatibility_Ideographs_Supplement,
Alphabetic_Presentation_Forms,
Arabic_Presentation_Forms_A,
Combining_Half_Marks,
Vertical_Forms,
CJK_Compatibility_Forms,
Small_Form_Variants,
Arabic_Presentation_Forms_B,
Halfwidth_And_Fullwidth_Forms,
Specials,
Tibetan,
Syriac,
Thaana,
Sinhala,
Myanmar,
Ethiopic,
Ethiopic_Supplement,
Ethiopic_Extended,
Cherokee,
Unified_Canadian_Aboriginal_Syllabics,
Ogham,
Runic,
Khmer,
Khmer_Symbols,
Mongolian,
Braille_Patterns,
Yi_Syllables,
Yi_Radicals,
Tagalog,
Hanunoo,
Buhid,
Tagbanwa,
Old_Italic,
Gothic,
Deseret,
Byzantine_Musical_Symbols,
Musical_Symbols,
Ancient_Greek_Musical_Notation,
Mathematical_Alphanumeric_Symbols,
Private_Use__plane_15_,
Private_Use__plane_16_,
Variation_Selectors,
Variation_Selectors_Supplement,
Tags,
Limbu,
Tai_Le,
New_Tai_Lue,
Buginese,
Glagolitic,
Tifinagh,
Yijing_Hexagram_Symbols,
Syloti_Nagri,
Linear_B_Syllabary,
Linear_B_Ideograms,
Aegean_Numbers,
Ancient_Greek_Numbers,
Ugaritic,
Old_Persian,
Shavian,
Osmanya,
Cypriot_Syllabary,
Kharoshthi,
Tai_Xuan_Jing_Symbols,
Cuneiform,
Cuneiform_Numbers_and_Punctuation,
Counting_Rod_Numerals,
Sundanese,
Lepcha,
Ol_Chiki,
Saurashtra,
Kayah_Li,
Rejang,
Cham,
Ancient_Symbols,
Phaistos_Disc,
Carian,
Lycian,
Lydian,
Domino_Tiles,
Mahjong_Tiles,
Reserved123,
Reserved124,
Reserved125,
Reserved126,
Reserved127,
        };



        //-----------
        public static IEnumerable<UnicodeLangRange> GetUnicodeLangRangeIter()
        {
            for (int i = 0; i < s_langRangs.Length; ++i)
            {
                yield return s_langRangs[i];
            }
        }

        public static BitposAndAssciatedUnicodeRanges GetUnicodeRanges(int bitpos)
        {
            return s_bitposAndAssocRanges[bitpos];
        }

        static readonly BitposAndAssciatedUnicodeRanges[] s_bitposAndAssocRanges = new BitposAndAssciatedUnicodeRanges[]
        {

            //AUTOGEN
_(0,Basic_Latin),
_(1,Latin_1_Supplement),
_(2,Latin_Extended_A),
_(3,Latin_Extended_B),
_(4,IPA_Extensions,Phonetic_Extensions,Phonetic_Extensions_Supplement),
_(5,Spacing_Modifier_Letters,Modifier_Tone_Letters),
_(6,Combining_Diacritical_Marks,Combining_Diacritical_Marks_Supplement),
_(7,Greek_and_Coptic),
_(8,Coptic),
_(9,Cyrillic,Cyrillic_Supplement,Cyrillic_Extended_A,Cyrillic_Extended_B),
_(10,Armenian),
_(11,Hebrew),
_(12,Vai),
_(13,Arabic,Arabic_Supplement),
_(14,NKo),
_(15,Devanagari),
_(16,Bengali),
_(17,Gurmukhi),
_(18,Gujarati),
_(19,Oriya),
_(20,Tamil),
_(21,Telugu),
_(22,Kannada),
_(23,Malayalam),
_(24,Thai),
_(25,Lao),
_(26,Georgian,Georgian_Supplement),
_(27,Balinese),
_(28,Hangul_Jamo),
_(29,Latin_Extended_Additional,Latin_Extended_C,Latin_Extended_D),
_(30,Greek_Extended),
_(31,General_Punctuation,Supplemental_Punctuation),
_(32,Superscripts_And_Subscripts),
_(33,Currency_Symbols),
_(34,Combining_Diacritical_Marks_For_Symbols),
_(35,Letterlike_Symbols),
_(36,Number_Forms),
_(37,Arrows,Supplemental_Arrows_A,Supplemental_Arrows_B,Miscellaneous_Symbols_and_Arrows),
_(38,Mathematical_Operators,Supplemental_Mathematical_Operators,Miscellaneous_Mathematical_Symbols_A,Miscellaneous_Mathematical_Symbols_B),
_(39,Miscellaneous_Technical),
_(40,Control_Pictures),
_(41,Optical_Character_Recognition),
_(42,Enclosed_Alphanumerics),
_(43,Box_Drawing),
_(44,Block_Elements),
_(45,Geometric_Shapes),
_(46,Miscellaneous_Symbols),
_(47,Dingbats),
_(48,CJK_Symbols_And_Punctuation),
_(49,Hiragana),
_(50,Katakana,Katakana_Phonetic_Extensions),
_(51,Bopomofo,Bopomofo_Extended),
_(52,Hangul_Compatibility_Jamo),
_(53,Phags_pa),
_(54,Enclosed_CJK_Letters_And_Months),
_(55,CJK_Compatibility),
_(56,Hangul_Syllables),
_(57,Non_Plane_0),
_(58,Phoenician),
_(59,CJK_Unified_Ideographs,CJK_Radicals_Supplement,Kangxi_Radicals,Ideographic_Description_Characters,CJK_Unified_Ideographs_Extension_A,CJK_Unified_Ideographs_Extension_B,Kanbun),
_(60,Private_Use_Area__plane_0_),
_(61,CJK_Strokes,CJK_Compatibility_Ideographs,CJK_Compatibility_Ideographs_Supplement),
_(62,Alphabetic_Presentation_Forms),
_(63,Arabic_Presentation_Forms_A),
_(64,Combining_Half_Marks),
_(65,Vertical_Forms,CJK_Compatibility_Forms),
_(66,Small_Form_Variants),
_(67,Arabic_Presentation_Forms_B),
_(68,Halfwidth_And_Fullwidth_Forms),
_(69,Specials),
_(70,Tibetan),
_(71,Syriac),
_(72,Thaana),
_(73,Sinhala),
_(74,Myanmar),
_(75,Ethiopic,Ethiopic_Supplement,Ethiopic_Extended),
_(76,Cherokee),
_(77,Unified_Canadian_Aboriginal_Syllabics),
_(78,Ogham),
_(79,Runic),
_(80,Khmer,Khmer_Symbols),
_(81,Mongolian),
_(82,Braille_Patterns),
_(83,Yi_Syllables,Yi_Radicals),
_(84,Tagalog,Hanunoo,Buhid,Tagbanwa),
_(85,Old_Italic),
_(86,Gothic),
_(87,Deseret),
_(88,Byzantine_Musical_Symbols,Musical_Symbols,Ancient_Greek_Musical_Notation),
_(89,Mathematical_Alphanumeric_Symbols),
_(90,Private_Use__plane_15_,Private_Use__plane_16_),
_(91,Variation_Selectors,Variation_Selectors_Supplement),
_(92,Tags),
_(93,Limbu),
_(94,Tai_Le),
_(95,New_Tai_Lue),
_(96,Buginese),
_(97,Glagolitic),
_(98,Tifinagh),
_(99,Yijing_Hexagram_Symbols),
_(100,Syloti_Nagri),
_(101,Linear_B_Syllabary,Linear_B_Ideograms,Aegean_Numbers),
_(102,Ancient_Greek_Numbers),
_(103,Ugaritic),
_(104,Old_Persian),
_(105,Shavian),
_(106,Osmanya),
_(107,Cypriot_Syllabary),
_(108,Kharoshthi),
_(109,Tai_Xuan_Jing_Symbols),
_(110,Cuneiform,Cuneiform_Numbers_and_Punctuation),
_(111,Counting_Rod_Numerals),
_(112,Sundanese),
_(113,Lepcha),
_(114,Ol_Chiki),
_(115,Saurashtra),
_(116,Kayah_Li),
_(117,Rejang),
_(118,Cham),
_(119,Ancient_Symbols),
_(120,Phaistos_Disc),
_(121,Carian,Lycian,Lydian),
_(122,Domino_Tiles,Mahjong_Tiles),
_(123,Reserved123),
_(124,Reserved124),
_(125,Reserved125),
_(126,Reserved126),
_(127,Reserved127)
        };
        static BitposAndAssciatedUnicodeRanges _(int bitpos, params UnicodeLangRange[] ranges) => new BitposAndAssciatedUnicodeRanges(bitpos, ranges);

        public const int MAX_BITPOS = 122;
    }


}
